name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:

  check:
    name: Check
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        toolchain: [stable] # TODO: Do we want to run CI on other toolchains as well?
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      
      - name: Update Rust toolchain
        run: |
          rustup update ${{ matrix.toolchain }}
          rustup default ${{ matrix.toolchain }}
          rustup component add cargo
      
      - name: Check code with all features
        run: |
          cargo check --all-targets --all-features --verbose
      
      - name: Check code without any features
        run: |
          cargo check --all-targets --no-default-features --verbose
      
      - name: Build docs
        run: |
          cargo +nightly rustdoc --all-features --verbose -Z unstable-options -Z rustdoc-scrape-examples -- --generate-link-to-definition --cfg docsrs
  
  lint:
    name: Lint
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        toolchain: [stable] # TODO: Do we want to run CI on other toolchains as well?
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      
      - name: Update Rust toolchain
        run: |
          rustup update ${{ matrix.toolchain }}
          rustup default ${{ matrix.toolchain }}
          rustup component add cargo
          rustup component add clippy
          rustup component add rustfmt

      - name: Lint code
        run: |
          cargo clippy --all-targets --all-features --verbose -- --deny warnings
      
      - name: Format code
        run: |
          cargo +nightly fmt --check --verbose
    
  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        toolchain: [stable] # TODO: Do we want to run CI on other toolchains as well?
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Update Rust toolchain
        run: |
          rustup update ${{ matrix.toolchain }}
          rustup default ${{ matrix.toolchain }}
          rustup component add cargo
      
      - name: Run tests
        run: |
          cargo test --all-features --verbose
